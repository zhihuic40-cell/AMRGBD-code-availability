legend.title = element_text(size = 12, face = "bold"),
legend.text = element_text(size = 12, face = "bold"),
legend.key.size = unit(1, "cm"),
legend.spacing.y = unit(0.2, "cm"),
legend.box.margin = margin(0, 0, 0, 12),
legend.key = element_rect(color = NA, fill = NA),
legend.key.height = unit(1, "cm"),
legend.key.width = unit(1, "cm"),
legend.background = element_blank(),
panel.background = element_blank()
)
# 提取图例
shared_legend <- cowplot::get_legend(legend_base)
# 创建上下两行子图
top_row <- plots[[1]] | plots[[2]] | plots[[3]] | plots[[4]]
bottom_row <- plots[[5]] | plots[[6]] | plots[[7]] | plots[[8]]
# 组合所有元素
final_plot <- wrap_plots(
wrap_plots(top_row, bottom_row, ncol = 1),
shared_legend,
ncol = 2,
widths = c(8, 0.8)
)
final_plot
# 加载必要的包
library(ggplot2)
library(dplyr)
library(readxl)
library(tidyr)
library(RColorBrewer)
library(cowplot)
library(export)
# 读取Excel文件
file_path <- file.path("data", "ASSproportion.xlsx")
data <- read_excel(file_path)
apc_web_data_att_global_output <- readRDS("F:/BaiduSyncdisk/AMRGBD/第一篇/图表改/图3/data/apc_web_data_att_global_output.rds")
apc_web_data_ass_HI_output <- readRDS("F:/BaiduSyncdisk/AMRGBD/第一篇/图表改/图3/data/apc_web_data_ass_HI_output.rds")
apc_web_data_att_HI_output <- readRDS("F:/BaiduSyncdisk/AMRGBD/第一篇/图表改/图3/data/apc_web_data_att_HI_output.rds")
apc_web_data_ass_LAC_output <- readRDS("F:/BaiduSyncdisk/AMRGBD/第一篇/图表改/图3/data/apc_web_data_ass_LAC_output.rds")
apc_web_data_ass_global_output <- readRDS("F:/BaiduSyncdisk/AMRGBD/第一篇/图表改/图3/data/apc_web_data_ass_global_output.rds")
apc_web_data_att_CEEECA_output <- readRDS("F:/BaiduSyncdisk/AMRGBD/第一篇/图表改/图3/data/apc_web_data_att_CEEECA_output.rds")
apc_web_data_ass_CEEECA_output <- readRDS("F:/BaiduSyncdisk/AMRGBD/第一篇/图表改/图3/data/apc_web_data_ass_CEEECA_output.rds")
apc_web_data_att_LAC_output <- readRDS("F:/BaiduSyncdisk/AMRGBD/第一篇/图表改/图3/data/apc_web_data_att_LAC_output.rds")
apc_web_data_ass_SA_output <- readRDS("F:/BaiduSyncdisk/AMRGBD/第一篇/图表改/图3/data/apc_web_data_ass_SA_output.rds")
apc_web_data_att_SA_output <- readRDS("F:/BaiduSyncdisk/AMRGBD/第一篇/图表改/图3/data/apc_web_data_att_SA_output.rds")
apc_web_data_ass_SAEAO_output <- readRDS("F:/BaiduSyncdisk/AMRGBD/第一篇/图表改/图3/data/apc_web_data_ass_SAEAO_output.rds")
apc_web_data_att_SAEAO_output <- readRDS("F:/BaiduSyncdisk/AMRGBD/第一篇/图表改/图3/data/apc_web_data_att_SAEAO_output.rds")
apc_web_data_ass_SSA_output <- readRDS("F:/BaiduSyncdisk/AMRGBD/第一篇/图表改/图3/data/apc_web_data_ass_SSA_output.rds")
apc_web_data_ass_NAME_output <- readRDS("F:/BaiduSyncdisk/AMRGBD/第一篇/图表改/图3/data/apc_web_data_ass_NAME_output.rds")
apc_web_data_att_NAME_output <- readRDS("F:/BaiduSyncdisk/AMRGBD/第一篇/图表改/图3/data/apc_web_data_att_NAME_output.rds")
apc_web_data_att_SSA_output <- readRDS("F:/BaiduSyncdisk/AMRGBD/第一篇/图表改/图3/data/apc_web_data_att_SSA_output.rds")
# 加载必要的包
library(ggplot2)
library(dplyr)
library(patchwork)
# 生成每个子图的数据
long_age_global <- apc_web_data_ass_global_output[["LongAge"]] %>% as.data.frame()
long_age_ceeeca <- apc_web_data_ass_CEEECA_output[["LongAge"]] %>% as.data.frame()
long_age_hi <- apc_web_data_ass_HI_output[["LongAge"]] %>% as.data.frame()
long_age_lac <- apc_web_data_ass_LAC_output[["LongAge"]] %>% as.data.frame()
long_age_name <- apc_web_data_ass_NAME_output[["LongAge"]] %>% as.data.frame()
long_age_sa <- apc_web_data_ass_SA_output[["LongAge"]] %>% as.data.frame()
long_age_saeao <- apc_web_data_ass_SAEAO_output[["LongAge"]] %>% as.data.frame()
long_age_ssa <- apc_web_data_ass_SSA_output[["LongAge"]] %>% as.data.frame()
long_age_global_att <- apc_web_data_att_global_output[["LongAge"]] %>% as.data.frame()
long_age_ceeeca_att <- apc_web_data_att_CEEECA_output[["LongAge"]] %>% as.data.frame()
long_age_hi_att <- apc_web_data_att_HI_output[["LongAge"]] %>% as.data.frame()
long_age_lac_att <- apc_web_data_att_LAC_output[["LongAge"]] %>% as.data.frame()
long_age_name_att <- apc_web_data_att_NAME_output[["LongAge"]] %>% as.data.frame()
long_age_sa_att <- apc_web_data_att_SA_output[["LongAge"]] %>% as.data.frame()
long_age_saeao_att <- apc_web_data_att_SAEAO_output[["LongAge"]] %>% as.data.frame()
long_age_ssa_att <- apc_web_data_att_SSA_output[["LongAge"]] %>% as.data.frame()
# 计算数据范围的函数
get_data_range <- function(ass_data, att_data) {
min_val <- min(c(ass_data$CILo, att_data$CILo), na.rm = TRUE)
max_val <- max(c(ass_data$CIHi, att_data$CIHi), na.rm = TRUE)
return(c(min_val, max_val))
}
# 获取所有数据范围
ranges <- list(
global = get_data_range(long_age_global, long_age_global_att),
ceeeca = get_data_range(long_age_ceeeca, long_age_ceeeca_att),
hi = get_data_range(long_age_hi, long_age_hi_att),
lac = get_data_range(long_age_lac, long_age_lac_att),
name = get_data_range(long_age_name, long_age_name_att),
sa = get_data_range(long_age_sa, long_age_sa_att),
saeao = get_data_range(long_age_saeao, long_age_saeao_att),
ssa = get_data_range(long_age_ssa, long_age_ssa_att)
)
# 计算整体的最小值和最大值
y_min <- floor(min(sapply(ranges, function(x) x[1]), na.rm = TRUE) / 50) * 50
y_max <- ceiling(max(sapply(ranges, function(x) x[2]), na.rm = TRUE) / 50) * 50
# 打印范围，方便查看
print(paste("整体数据范围：", y_min, "到", y_max))
# 定义配色和点形状
lancet_colors <- c("Associated with CR" = "#00468B", "Attributable to CR" = "#ED0000")
point_shapes <- c("Associated with CR" = 16, "Attributable to CR" = 17)
# 定义通用主题
# Define common theme with inward ticks
common_theme <- theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 10),
axis.title.x = element_text(size = 8, face = "bold"),
axis.title.y = element_text(size = 8, face = "bold"),
axis.text.x = element_text(size = 8, face = "bold", color = "black"),
axis.text.y = element_text(size = 8, face = "bold", color = "black"),
panel.grid.major = element_line(color = "grey90"),
panel.grid.minor = element_line(color = "grey95"),
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
plot.margin = unit(c(0.2, 0.2, 0.2, 0.2), "cm"),
axis.ticks = element_line(color = "black", size = 0.5),
axis.ticks.length = unit(0.15, "cm")
)
# 定义绘图函数
plot_curve <- function(data_ass, data_att, title, show_legend = FALSE) {
# 添加分组标签
data_ass$Group <- "Associated with CR"
data_att$Group <- "Attributable to CR"
# 合并数据
combined_data <- rbind(data_ass, data_att)
p <- ggplot(data = combined_data, aes(x = Age, y = Rate, color = Group, shape = Group)) +
geom_line(size = 0.8) +
geom_point(size = 2) +
geom_ribbon(aes(ymin = CILo, ymax = CIHi, fill = Group), alpha = 0.1, color = NA) +
scale_color_manual(values = lancet_colors, name = "Counterfactual") +
scale_shape_manual(values = point_shapes, name = "Counterfactual") +
scale_fill_manual(values = lancet_colors, name = "Counterfactual") +
scale_x_continuous(breaks = seq(0, 100, by = 20)) +
scale_y_continuous(limits = c(y_min, y_max),
breaks = seq(y_min, y_max, by = 500)) +
labs(title = title) +
common_theme +
theme(legend.position = if(show_legend) "right" else "none")
return(p)
}
# 创建图例数据
legend_plot <- plot_curve(data_ass = data.frame(Age = 1:2,
Rate = c(1,2),
CILo = c(0.5,1.5),
CIHi = c(1.5,2.5)),
data_att = data.frame(Age = 1:2,
Rate = c(3,4),
CILo = c(2.5,3.5),
CIHi = c(3.5,4.5)),
title = "",
show_legend = TRUE) +
theme(
legend.title = element_text(size = 8, face = "bold"),
legend.text = element_text(size = 8, face = "bold"),
legend.key.size = unit(0.8, "cm"),
legend.spacing.y = unit(0.2, "cm"),
legend.box.margin = margin(0, 0, 0, -1),
legend.key = element_rect(color = NA, fill = "white"),
legend.background = element_blank()
)
# 提取图例
shared_legend <- cowplot::get_legend(legend_plot)
# 绘制各区域图表
plot_global <- plot_curve(long_age_global, long_age_global_att, "Global")
plot_ceeeca <- plot_curve(long_age_ceeeca, long_age_ceeeca_att,
"Central Europe, Eastern\nEurope, and Central Asia")
plot_hi <- plot_curve(long_age_hi, long_age_hi_att, "High-income")
plot_lac <- plot_curve(long_age_lac, long_age_lac_att, "Latin America\nand Caribbean")
plot_name <- plot_curve(long_age_name, long_age_name_att, "North Africa\nand Middle East")
plot_sa <- plot_curve(long_age_sa, long_age_sa_att, "South Asia")
plot_saeao <- plot_curve(long_age_saeao, long_age_saeao_att,
"Southeast Asia, East Asia,\nand Oceania")
plot_ssa <- plot_curve(long_age_ssa, long_age_ssa_att, "Sub-Saharan Africa")
# 定义布局
layout <- "
AAAAAAAAB
AAAAAAAAB
AAAAAAAAB
AAAAAAAAB
"
# 组合所有元素
final_plot <- wrap_plots(
wrap_plots(plot_global, plot_ceeeca, plot_hi, plot_lac,
plot_name, plot_sa, plot_saeao, plot_ssa,
ncol = 4),
shared_legend,
design = layout
)
# 添加白色背景
final_plot <- final_plot &
theme(plot.background = element_rect(fill = "white", color = NA))
final_plot
# 加载必要的包
library(ggplot2)
library(dplyr)
library(patchwork)
library(cowplot)
# 生成每个子图的数据
period_rr_global <- apc_web_data_ass_global_output[["PeriodRR"]] %>% as.data.frame()
period_rr_ceeeca <- apc_web_data_ass_CEEECA_output[["PeriodRR"]] %>% as.data.frame()
period_rr_hi <- apc_web_data_ass_HI_output[["PeriodRR"]] %>% as.data.frame()
period_rr_lac <- apc_web_data_ass_LAC_output[["PeriodRR"]] %>% as.data.frame()
period_rr_name <- apc_web_data_ass_NAME_output[["PeriodRR"]] %>% as.data.frame()
period_rr_sa <- apc_web_data_ass_SA_output[["PeriodRR"]] %>% as.data.frame()
period_rr_saeao <- apc_web_data_ass_SAEAO_output[["PeriodRR"]] %>% as.data.frame()
period_rr_ssa <- apc_web_data_ass_SSA_output[["PeriodRR"]] %>% as.data.frame()
period_rr_global_att <- apc_web_data_att_global_output[["PeriodRR"]] %>% as.data.frame()
period_rr_ceeeca_att <- apc_web_data_att_CEEECA_output[["PeriodRR"]] %>% as.data.frame()
period_rr_hi_att <- apc_web_data_att_HI_output[["PeriodRR"]] %>% as.data.frame()
period_rr_lac_att <- apc_web_data_att_LAC_output[["PeriodRR"]] %>% as.data.frame()
period_rr_name_att <- apc_web_data_att_NAME_output[["PeriodRR"]] %>% as.data.frame()
period_rr_sa_att <- apc_web_data_att_SA_output[["PeriodRR"]] %>% as.data.frame()
period_rr_saeao_att <- apc_web_data_att_SAEAO_output[["PeriodRR"]] %>% as.data.frame()
period_rr_ssa_att <- apc_web_data_att_SSA_output[["PeriodRR"]] %>% as.data.frame()
# 计算数据范围的函数
get_data_range <- function(ass_data, att_data) {
min_val <- min(c(ass_data$CILo, att_data$CILo), na.rm = TRUE)
max_val <- max(c(ass_data$CIHi, att_data$CIHi), na.rm = TRUE)
return(c(min_val, max_val))
}
# 获取所有数据范围
ranges <- list(
global = get_data_range(period_rr_global, period_rr_global_att),
ceeeca = get_data_range(period_rr_ceeeca, period_rr_ceeeca_att),
hi = get_data_range(period_rr_hi, period_rr_hi_att),
lac = get_data_range(period_rr_lac, period_rr_lac_att),
name = get_data_range(period_rr_name, period_rr_name_att),
sa = get_data_range(period_rr_sa, period_rr_sa_att),
saeao = get_data_range(period_rr_saeao, period_rr_saeao_att),
ssa = get_data_range(period_rr_ssa, period_rr_ssa_att)
)
# 计算整体的最小值和最大值
y_min <- floor(min(sapply(ranges, function(x) x[1]), na.rm = TRUE) * 10) / 10
y_max <- ceiling(max(sapply(ranges, function(x) x[2]), na.rm = TRUE) * 10) / 10
# 打印范围，方便查看
print(paste("整体数据范围：", y_min, "到", y_max))
# 定义配色和点形状
lancet_colors <- c("Associated with CR" = "#00468B", "Attributable to CR" = "#ED0000")
point_shapes <- c("Associated with CR" = 16, "Attributable to CR" = 17)
# 定义通用主题
# Define common theme with inward ticks
common_theme <- theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 10),
axis.title.x = element_text(size = 8, face = "bold"),
axis.title.y = element_text(size = 8, face = "bold"),
axis.text.x = element_text(size = 8, face = "bold", color = "black"),
axis.text.y = element_text(size = 8, face = "bold", color = "black"),
panel.grid.major = element_line(color = "grey90"),
panel.grid.minor = element_line(color = "grey95"),
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
plot.margin = unit(c(0.2, 0.2, 0.2, 0.2), "cm"),
axis.ticks = element_line(color = "black", size = 0.5),
axis.ticks.length = unit(0.15, "cm")
)
# 定义绘图函数
plot_curve <- function(data_ass, data_att, title, show_legend = FALSE) {
# 添加分组标签
data_ass$Group <- "Associated with CR"
data_att$Group <- "Attributable to CR"
# 找到Rate Ratio = 1的点
reference_point <- data_ass[which.min(abs(data_ass$`Rate Ratio` - 1)), "Period"]
# 合并数据
combined_data <- rbind(data_ass, data_att)
# 计算横坐标范围和刻度
x_min <- 1990
x_max <- 2020
p <- ggplot(data = combined_data, aes(x = Period, y = `Rate Ratio`, color = Group, shape = Group)) +
geom_line(size = 0.9) +
geom_point(size = 1.8) +
geom_ribbon(aes(ymin = CILo, ymax = CIHi, fill = Group), alpha = 0.1, color = NA) +
# 添加参考线
geom_hline(yintercept = 1,
linetype = "dashed",
color = "black",
size = 0.5) +
geom_vline(xintercept = reference_point,
linetype = "dashed",
color = "black",
size = 0.5) +
scale_color_manual(values = lancet_colors, name = "Counterfactual") +
scale_shape_manual(values = point_shapes, name = "Counterfactual") +
scale_fill_manual(values = lancet_colors, name = "Counterfactual") +
# 控制横坐标
scale_x_continuous(limits = c(x_min, x_max),
breaks = seq(x_min, x_max, by = 5)) +
# 控制纵坐标
scale_y_continuous(limits = c(y_min, y_max)) +
labs(title = title,
x = "Calendar Year",
y = "Rate Ratio") +
common_theme +
theme(legend.position = if(show_legend) "right" else "none")
return(p)
}
# 创建图例数据
legend_plot <- plot_curve(
data_ass = data.frame(
"Period" = 1:2,
"Rate Ratio" = c(1,2),
"CILo" = c(0.5,1.5),
"CIHi" = c(1.5,2.5),
check.names = FALSE
),
data_att = data.frame(
"Period" = 1:2,
"Rate Ratio" = c(3,4),
"CILo" = c(2.5,3.5),
"CIHi" = c(3.5,4.5),
check.names = FALSE
),
title = "",
show_legend = TRUE
) +
theme(
legend.title = element_text(size = 8, face = "bold"),
legend.text = element_text(size = 8, face = "bold"),
legend.key.size = unit(0.8, "cm"),
legend.spacing.y = unit(0.2, "cm"),
legend.box.margin = margin(0, 0, 0, -1),
legend.key = element_rect(color = NA, fill = "white"),
legend.background = element_blank()
)
# 提取图例
shared_legend <- get_legend(legend_plot)
# 绘制各区域图表
plot_global <- plot_curve(period_rr_global, period_rr_global_att, "Global")
plot_ceeeca <- plot_curve(period_rr_ceeeca, period_rr_ceeeca_att,
"Central Europe, Eastern\nEurope, and Central Asia")
plot_hi <- plot_curve(period_rr_hi, period_rr_hi_att, "High-income")
plot_lac <- plot_curve(period_rr_lac, period_rr_lac_att, "Latin America\nand Caribbean")
plot_name <- plot_curve(period_rr_name, period_rr_name_att, "North Africa\nand Middle East")
plot_sa <- plot_curve(period_rr_sa, period_rr_sa_att, "South Asia")
plot_saeao <- plot_curve(period_rr_saeao, period_rr_saeao_att,
"Southeast Asia, East Asia,\nand Oceania")
plot_ssa <- plot_curve(period_rr_ssa, period_rr_ssa_att, "Sub-Saharan Africa")
# 定义布局
layout <- "
AAAAAAAAB
AAAAAAAAB
AAAAAAAAB
AAAAAAAAB
"
# 组合所有元素
final_plot <- wrap_plots(
wrap_plots(plot_global, plot_ceeeca, plot_hi, plot_lac,
plot_name, plot_sa, plot_saeao, plot_ssa,
ncol = 4),
shared_legend,
design = layout
)
# 添加白色背景
final_plot <- final_plot &
theme(plot.background = element_rect(fill = "white", color = NA))
final_plot
# 加载必要的包
library(ggplot2)
library(dplyr)
library(patchwork)
# 生成每个子图的数据
cohort_rr_global <- apc_web_data_ass_global_output[["CohortRR"]] %>% as.data.frame()
cohort_rr_ceeeca <- apc_web_data_ass_CEEECA_output[["CohortRR"]] %>% as.data.frame()
cohort_rr_hi <- apc_web_data_ass_HI_output[["CohortRR"]] %>% as.data.frame()
cohort_rr_lac <- apc_web_data_ass_LAC_output[["CohortRR"]] %>% as.data.frame()
cohort_rr_name <- apc_web_data_ass_NAME_output[["CohortRR"]] %>% as.data.frame()
cohort_rr_sa <- apc_web_data_ass_SA_output[["CohortRR"]] %>% as.data.frame()
cohort_rr_saeao <- apc_web_data_ass_SAEAO_output[["CohortRR"]] %>% as.data.frame()
cohort_rr_ssa <- apc_web_data_ass_SSA_output[["CohortRR"]] %>% as.data.frame()
cohort_rr_global_att <- apc_web_data_att_global_output[["CohortRR"]] %>% as.data.frame()
cohort_rr_ceeeca_att <- apc_web_data_att_CEEECA_output[["CohortRR"]] %>% as.data.frame()
cohort_rr_hi_att <- apc_web_data_att_HI_output[["CohortRR"]] %>% as.data.frame()
cohort_rr_lac_att <- apc_web_data_att_LAC_output[["CohortRR"]] %>% as.data.frame()
cohort_rr_name_att <- apc_web_data_att_NAME_output[["CohortRR"]] %>% as.data.frame()
cohort_rr_sa_att <- apc_web_data_att_SA_output[["CohortRR"]] %>% as.data.frame()
cohort_rr_saeao_att <- apc_web_data_att_SAEAO_output[["CohortRR"]] %>% as.data.frame()
cohort_rr_ssa_att <- apc_web_data_att_SSA_output[["CohortRR"]] %>% as.data.frame()
# 计算数据范围的函数
get_data_range <- function(ass_data, att_data) {
min_val <- min(c(ass_data$CILo, att_data$CILo), na.rm = TRUE)
max_val <- max(c(ass_data$CIHi, att_data$CIHi), na.rm = TRUE)
return(c(min_val, max_val))
}
# 获取所有数据范围
ranges <- list(
global = get_data_range(cohort_rr_global, cohort_rr_global_att),
ceeeca = get_data_range(cohort_rr_ceeeca, cohort_rr_ceeeca_att),
hi = get_data_range(cohort_rr_hi, cohort_rr_hi_att),
lac = get_data_range(cohort_rr_lac, cohort_rr_lac_att),
name = get_data_range(cohort_rr_name, cohort_rr_name_att),
sa = get_data_range(cohort_rr_sa, cohort_rr_sa_att),
saeao = get_data_range(cohort_rr_saeao, cohort_rr_saeao_att),
ssa = get_data_range(cohort_rr_ssa, cohort_rr_ssa_att)
)
# 计算整体的最小值和最大值
y_min <- floor(min(sapply(ranges, function(x) x[1]), na.rm = TRUE) * 10) / 10
y_max <- ceiling(max(sapply(ranges, function(x) x[2]), na.rm = TRUE) * 10) / 10
# 打印范围，方便查看
print(paste("整体数据范围：", y_min, "到", y_max))
# 定义配色和点形状
lancet_colors <- c("Associated with CR" = "#00468B", "Attributable to CR" = "#ED0000")
point_shapes <- c("Associated with CR" = 16, "Attributable to CR" = 17)
# 定义通用主题
# Define common theme with inward ticks
common_theme <- theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 10),
axis.title.x = element_text(size = 8, face = "bold"),
axis.title.y = element_text(size = 8, face = "bold"),
axis.text.x = element_text(size = 8, face = "bold", color = "black"),
axis.text.y = element_text(size = 8, face = "bold", color = "black"),
panel.grid.major = element_line(color = "grey90"),
panel.grid.minor = element_line(color = "grey95"),
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
plot.margin = unit(c(0.2, 0.2, 0.2, 0.2), "cm"),
axis.ticks = element_line(color = "black", size = 0.5),
axis.ticks.length = unit(0.15, "cm")
)
# 定义绘图函数
plot_curve <- function(data_ass, data_att, title, show_legend = FALSE) {
# 添加分组标签
data_ass$Group <- "Associated with CR"
data_att$Group <- "Attributable to CR"
# 找到Rate Ratio = 1的点
reference_point <- data_ass[which.min(abs(data_ass$`Rate Ratio` - 1)), "Cohort"]
# 合并数据
combined_data <- rbind(data_ass, data_att)
# 计算横坐标范围和刻度
x_min <- 1900
x_max <- 2020
p <- ggplot(data = combined_data, aes(x = Cohort, y = `Rate Ratio`, color = Group, shape = Group)) +
geom_line(size = 0.8) +
geom_point(size = 2) +
geom_ribbon(aes(ymin = CILo, ymax = CIHi, fill = Group), alpha = 0.1, color = NA) +
# 添加参考线
geom_hline(yintercept = 1,
linetype = "dashed",
color = "black",
size = 0.5) +
geom_vline(xintercept = reference_point,
linetype = "dashed",
color = "black",
size = 0.5) +
scale_color_manual(values = lancet_colors, name = "Counterfactual") +
scale_shape_manual(values = point_shapes, name = "Counterfactual") +
scale_fill_manual(values = lancet_colors, name = "Counterfactual") +
# 控制横坐标
scale_x_continuous(limits = c(x_min, x_max),
breaks = seq(x_min, x_max, by = 20)) +
# 控制纵坐标
scale_y_continuous(limits = c(y_min, y_max)) +
labs(title = title,
x = "Birth Cohort",
y = "Rate Ratio") +
common_theme +
theme(legend.position = if(show_legend) "right" else "none")
return(p)
}
# 创建图例数据
legend_plot <- plot_curve(
data_ass = data.frame(
"Cohort" = 1:2,
"Rate Ratio" = c(1,2),
"CILo" = c(0.5,1.5),
"CIHi" = c(1.5,2.5),
check.names = FALSE
),
data_att = data.frame(
"Cohort" = 1:2,
"Rate Ratio" = c(3,4),
"CILo" = c(2.5,3.5),
"CIHi" = c(3.5,4.5),
check.names = FALSE
),
title = "",
show_legend = TRUE
) +
theme(
legend.title = element_text(size = 8, face = "bold"),
legend.text = element_text(size = 8, face = "bold"),
legend.key.size = unit(0.8, "cm"),
legend.spacing.y = unit(0.2, "cm"),
legend.box.margin = margin(0, 0, 0, -1),
legend.key = element_rect(color = NA, fill = "white"),
legend.background = element_blank()
)
# 提取图例
shared_legend <- get_legend(legend_plot)
# 绘制各区域图表
plot_global <- plot_curve(cohort_rr_global, cohort_rr_global_att, "Global")
plot_ceeeca <- plot_curve(cohort_rr_ceeeca, cohort_rr_ceeeca_att,
"Central Europe, Eastern\nEurope, and Central Asia")
plot_hi <- plot_curve(cohort_rr_hi, cohort_rr_hi_att, "High-income")
plot_lac <- plot_curve(cohort_rr_lac, cohort_rr_lac_att, "Latin America\nand Caribbean")
plot_name <- plot_curve(cohort_rr_name, cohort_rr_name_att, "North Africa\nand Middle East")
plot_sa <- plot_curve(cohort_rr_sa, cohort_rr_sa_att, "South Asia")
plot_saeao <- plot_curve(cohort_rr_saeao, cohort_rr_saeao_att,
"Southeast Asia, East Asia,\nand Oceania")
plot_ssa <- plot_curve(cohort_rr_ssa, cohort_rr_ssa_att, "Sub-Saharan Africa")
# 定义布局
layout <- "
AAAAAAAAB
AAAAAAAAB
AAAAAAAAB
AAAAAAAAB
"
# 组合所有元素
final_plot <- wrap_plots(
wrap_plots(plot_global, plot_ceeeca, plot_hi, plot_lac,
plot_name, plot_sa, plot_saeao, plot_ssa,
ncol = 4),
shared_legend,
design = layout
)
# 添加白色背景
final_plot <- final_plot &
theme(plot.background = element_rect(fill = "white", color = NA))
final_plot
